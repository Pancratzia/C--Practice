@page "/users"
@using DemoCRUD.Shared
@inject HttpClient Http

<PageTitle>Usuarios</PageTitle>

<h1 class="text-center mb-5">USUARIOS</h1>

<p class="text-center fw-bold text-uppercase">Tabla General de Usuarios</p>

<table class="table">
    <thead>
        <tr>
            <th>Nombre</th>
            <th>Correo</th>
        </tr>

    </thead>
    <tbody>

        @if (Listado.Count > 0)
        {

            @foreach (var item in Listado)
            {
                <tr>
                    <td>@item.Nombre</td>
                    <td>@item.Correo</td>
                </tr>
            }

        }
        else
        {
            <tr>
                <td colspan="2">No hay datos</td>
            </tr>
        }

    </tbody>
</table>

<br />


<label class="form-label">Nombre: </label>
<input class="form-control" type="text" placeholder="Escriba su nombre" @bind-value="usuario.Nombre" />
<br />
<label class="form-label">Correo: </label>
<input class="form-control" type="email" placeholder="Escriba su correo" @bind-value="usuario.Correo" />

<br />
<button @onclick="CrearUsuario" type="button" class="btn btn-primary">Guardar</button>

@if (!string.IsNullOrEmpty(Respuesta))
{
    <p class="alert alert-info mt-2" role="alert">@Respuesta</p>
}

@code {

    string Respuesta = "";
    User usuario = new User();
    public static List<User> Listado = new List<User>();

    async Task CrearUsuario()
    {

        if (string.IsNullOrEmpty(usuario.Nombre) || string.IsNullOrEmpty(usuario.Correo))
        {
            Respuesta = "Faltan datos";
            return;
        }
        var respuesta = await Http.PostAsJsonAsync("http://localhost:5137/api/User/AddUser", usuario);

        Respuesta = await respuesta.Content.ReadAsStringAsync();

        await Update();
    }

    protected override async Task OnInitializedAsync()
    {
        await Update();
    }

    async Task Update()
    {
        var usuarios = await Http.GetFromJsonAsync<List<User>>("http://localhost:5137/api/User/GetUsers");
        Listado = usuarios ?? new List<User>();
    }

}
